"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isModuleInstalled = exports.requireOrThrow = exports.parseNumberOr = exports.parseQueryString = exports.contentBetweenEnds = exports.contentBetween = exports.mergeObj = void 0;
const mergeObj = (one, two) => {
    for (const key in two) {
        if (Object.prototype.hasOwnProperty.call(two, key)) {
            const ele = two[key];
            if (typeof ele === "object")
                one[key] = (0, exports.mergeObj)(one[key], ele);
            else
                one[key] = ele;
        }
    }
    return one;
};
exports.mergeObj = mergeObj;
const contentBetween = (data, start, end) => {
    return data.split(start, 2)[1].split(end, 1)[0];
};
exports.contentBetween = contentBetween;
const contentBetweenEnds = (data, start, ends) => {
    const first = data.split(start, 2)[1];
    for (const [x, y] of ends) {
        const second = first.split(x, 1)[0];
        if (second.length !== first.length) {
            return second + y;
        }
    }
    // should i return first?
    return first;
};
exports.contentBetweenEnds = contentBetweenEnds;
const parseQueryString = (data) => {
    const params = {};
    data.split("&").forEach((x) => {
        const [k, v] = x.split("=");
        params[k] = decodeURIComponent(v);
    });
    return params;
};
exports.parseQueryString = parseQueryString;
const parseNumberOr = (data, def) => {
    if (typeof data === "string") {
        return parseInt(data);
    }
    return def;
};
exports.parseNumberOr = parseNumberOr;
const requireOrThrow = (moduleName) => {
    try {
        const module = require(moduleName);
        return module;
    }
    catch (_) {
        throw new Error(`Couldn't access "${moduleName}". Did you install it?`);
    }
};
exports.requireOrThrow = requireOrThrow;
const isModuleInstalled = (moduleName) => {
    try {
        require(moduleName);
        return true;
    }
    catch (_) {
        return false;
    }
};
exports.isModuleInstalled = isModuleInstalled;
