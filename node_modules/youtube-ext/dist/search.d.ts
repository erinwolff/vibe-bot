import { constants } from "./utils/constants";
import { UndiciRequestOptions } from "./utils/undici";
export interface SearchOptions {
    requestOptions?: UndiciRequestOptions;
    filterType?: keyof typeof constants.urls.search.filters;
}
export interface SearchVideo {
    title: string;
    id: string;
    url: string;
    channel: {
        name: string;
        id: string;
        url: string;
    };
    duration: {
        text: string;
        pretty: string;
    };
    published: {
        pretty: string;
    };
    views: {
        text: string;
        pretty: string;
        prettyLong: string;
    };
    thumbnails: {
        url: string;
        width: number;
        height: number;
    }[];
}
export interface SearchChannel {
    name: string;
    id: string;
    url: string;
    subscribers: {
        text: string;
        pretty: string;
    };
    icons: {
        url: string;
        width: number;
        height: number;
    }[];
    badges: string[];
}
export interface SearchPlaylist {
    name: string;
    id: string;
    url: string;
    thumbnails: {
        url: string;
        width: number;
        height: number;
    }[];
    videoCount: string;
    published: {
        pretty?: string;
    };
}
/**
 * Search for videos, channels, playlists, etc...
 */
export declare const search: (terms: string, options?: SearchOptions) => Promise<{
    videos: SearchVideo[];
    channels: SearchChannel[];
    playlists: SearchPlaylist[];
}>;
export default search;
