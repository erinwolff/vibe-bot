import { UndiciRequestOptions } from "./utils/undici";
export interface ChannelInfoOptions {
    requestOptions?: UndiciRequestOptions;
    includeVideos?: boolean;
}
export interface ChannelVideo {
    title: string;
    id: string;
    url: string;
    channel: {
        name: string;
        id: string;
        url: string;
    };
    thumbnails: {
        url: string;
        width: number;
        height: number;
    }[];
    duration: {
        pretty: string;
        text: string;
    };
    views: {
        text: string;
        pretty: string;
        simpleText: string;
    };
    published: {
        text: string;
    };
}
export interface ChannelInfo {
    name: string;
    id: string;
    url: string;
    rssUrl: string;
    vanityUrl: string;
    description: string;
    subscribers: {
        pretty: string;
        text: string;
    };
    thumbnails: {
        url: string;
        width: number;
        height: number;
    }[];
    banner: {
        url: string;
        width: number;
        height: number;
    }[];
    tvBanner: {
        url: string;
        width: number;
        height: number;
    }[];
    mobileBanner: {
        url: string;
        width: number;
        height: number;
    }[];
    badges: string[];
    tags: string[];
    videos: ChannelVideo[];
    unlisted: boolean;
    familySafe: boolean;
}
/**
 * Get full information about a YouTube channel.
 */
export declare const channelInfo: (url: string, options?: ChannelInfoOptions) => Promise<ChannelInfo>;
export default channelInfo;
