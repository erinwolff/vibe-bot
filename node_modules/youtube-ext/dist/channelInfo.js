"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.channelInfo = void 0;
const undici_1 = require("undici");
const constants_1 = require("./utils/constants");
const common_1 = require("./utils/common");
const utils_1 = require("./utils");
/**
 * Get full information about a YouTube channel.
 */
const channelInfo = (url, options = {}) => __awaiter(void 0, void 0, void 0, function* () {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33;
    if (typeof url !== "string") {
        throw new Error(constants_1.constants.errors.type("url", "string", typeof url));
    }
    if (typeof options !== "object") {
        throw new Error(constants_1.constants.errors.type("options", "object", typeof options));
    }
    options = (0, common_1.mergeObj)({
        requestOptions: {
            headers: {
                "User-Agent": constants_1.constants.headers.userAgent,
            },
        },
        includeVideos: false,
    }, options);
    if (!url.startsWith("http")) {
        url = constants_1.constants.urls.channel.base(url);
    }
    let data;
    try {
        const resp = yield (0, undici_1.request)(url, options.requestOptions);
        data = yield resp.body.text();
    }
    catch (err) {
        throw new Error(`Failed to fetch url "${url}". (${err})`);
    }
    let initialData;
    try {
        const raw = (0, common_1.contentBetween)(data, "var ytInitialData = ", ";</script>");
        initialData = JSON.parse(raw);
    }
    catch (err) {
        throw new Error(`Failed to parse data from webpage. (${err})`);
    }
    const channel = {
        name: (_b = (_a = initialData === null || initialData === void 0 ? void 0 : initialData.metadata) === null || _a === void 0 ? void 0 : _a.channelMetadataRenderer) === null || _b === void 0 ? void 0 : _b.title,
        id: (_d = (_c = initialData === null || initialData === void 0 ? void 0 : initialData.metadata) === null || _c === void 0 ? void 0 : _c.channelMetadataRenderer) === null || _d === void 0 ? void 0 : _d.externalId,
        url: (_f = (_e = initialData === null || initialData === void 0 ? void 0 : initialData.metadata) === null || _e === void 0 ? void 0 : _e.channelMetadataRenderer) === null || _f === void 0 ? void 0 : _f.channelUrl,
        rssUrl: (_h = (_g = initialData === null || initialData === void 0 ? void 0 : initialData.metadata) === null || _g === void 0 ? void 0 : _g.channelMetadataRenderer) === null || _h === void 0 ? void 0 : _h.rssUrl,
        vanityUrl: (_k = (_j = initialData === null || initialData === void 0 ? void 0 : initialData.microformat) === null || _j === void 0 ? void 0 : _j.microformatDataRenderer) === null || _k === void 0 ? void 0 : _k.vanityChannelUrl,
        description: (_m = (_l = initialData === null || initialData === void 0 ? void 0 : initialData.metadata) === null || _l === void 0 ? void 0 : _l.channelMetadataRenderer) === null || _m === void 0 ? void 0 : _m.description,
        subscribers: {
            pretty: (_q = (_p = (_o = initialData === null || initialData === void 0 ? void 0 : initialData.header) === null || _o === void 0 ? void 0 : _o.c4TabbedHeaderRenderer) === null || _p === void 0 ? void 0 : _p.subscriberCountText) === null || _q === void 0 ? void 0 : _q.simpleText,
            text: (_v = (_u = (_t = (_s = (_r = initialData === null || initialData === void 0 ? void 0 : initialData.header) === null || _r === void 0 ? void 0 : _r.c4TabbedHeaderRenderer) === null || _s === void 0 ? void 0 : _s.subscriberCountText) === null || _t === void 0 ? void 0 : _t.accessibility) === null || _u === void 0 ? void 0 : _u.accessibilityData) === null || _v === void 0 ? void 0 : _v.label,
        },
        banner: (_y = (_x = (_w = initialData === null || initialData === void 0 ? void 0 : initialData.header) === null || _w === void 0 ? void 0 : _w.c4TabbedHeaderRenderer) === null || _x === void 0 ? void 0 : _x.banner) === null || _y === void 0 ? void 0 : _y.thumbnails,
        tvBanner: (_1 = (_0 = (_z = initialData === null || initialData === void 0 ? void 0 : initialData.header) === null || _z === void 0 ? void 0 : _z.c4TabbedHeaderRenderer) === null || _0 === void 0 ? void 0 : _0.tvBanner) === null || _1 === void 0 ? void 0 : _1.thumbnails,
        mobileBanner: (_4 = (_3 = (_2 = initialData === null || initialData === void 0 ? void 0 : initialData.header) === null || _2 === void 0 ? void 0 : _2.c4TabbedHeaderRenderer) === null || _3 === void 0 ? void 0 : _3.mobileBanner) === null || _4 === void 0 ? void 0 : _4.thumbnails,
        badges: (_8 = (_7 = (_6 = (_5 = initialData === null || initialData === void 0 ? void 0 : initialData.header) === null || _5 === void 0 ? void 0 : _5.c4TabbedHeaderRenderer) === null || _6 === void 0 ? void 0 : _6.badges) === null || _7 === void 0 ? void 0 : _7.map((x) => { var _a; return (_a = x === null || x === void 0 ? void 0 : x.metadataBadgeRenderer) === null || _a === void 0 ? void 0 : _a.tooltip; })) === null || _8 === void 0 ? void 0 : _8.filter((x) => x),
        thumbnails: (_11 = (_10 = (_9 = initialData === null || initialData === void 0 ? void 0 : initialData.metadata) === null || _9 === void 0 ? void 0 : _9.channelMetadataRenderer) === null || _10 === void 0 ? void 0 : _10.avatar) === null || _11 === void 0 ? void 0 : _11.thumbnails,
        tags: (0, utils_1.parseYoutubeKeywords)((_14 = (_13 = (_12 = initialData === null || initialData === void 0 ? void 0 : initialData.metadata) === null || _12 === void 0 ? void 0 : _12.channelMetadataRenderer) === null || _13 === void 0 ? void 0 : _13.keywords) !== null && _14 !== void 0 ? _14 : ""),
        videos: [],
        unlisted: (_16 = (_15 = initialData === null || initialData === void 0 ? void 0 : initialData.microformat) === null || _15 === void 0 ? void 0 : _15.microformatDataRenderer) === null || _16 === void 0 ? void 0 : _16.unlisted,
        familySafe: (_18 = (_17 = initialData === null || initialData === void 0 ? void 0 : initialData.metadata) === null || _17 === void 0 ? void 0 : _17.channelMetadataRenderer) === null || _18 === void 0 ? void 0 : _18.isFamilySafe,
    };
    if (options.includeVideos) {
        (_33 = (_32 = (_31 = (_30 = (_29 = (_28 = (_27 = (_26 = (_25 = (_24 = (_23 = (_22 = (_21 = (_20 = (_19 = initialData === null || initialData === void 0 ? void 0 : initialData.contents) === null || _19 === void 0 ? void 0 : _19.twoColumnBrowseResultsRenderer) === null || _20 === void 0 ? void 0 : _20.tabs) === null || _21 === void 0 ? void 0 : _21.find((x) => { var _a; return ((_a = x === null || x === void 0 ? void 0 : x.tabRenderer) === null || _a === void 0 ? void 0 : _a.title) === "Home"; })) === null || _22 === void 0 ? void 0 : _22.tabRenderer) === null || _23 === void 0 ? void 0 : _23.content) === null || _24 === void 0 ? void 0 : _24.sectionListRenderer) === null || _25 === void 0 ? void 0 : _25.contents) === null || _26 === void 0 ? void 0 : _26.find((x) => {
            var _a, _b, _c, _d, _e;
            return (_e = (_d = (_c = (_b = (_a = x === null || x === void 0 ? void 0 : x.itemSectionRenderer) === null || _a === void 0 ? void 0 : _a.contents[0]) === null || _b === void 0 ? void 0 : _b.shelfRenderer) === null || _c === void 0 ? void 0 : _c.content) === null || _d === void 0 ? void 0 : _d.horizontalListRenderer) === null || _e === void 0 ? void 0 : _e.items;
        })) === null || _27 === void 0 ? void 0 : _27.itemSectionRenderer) === null || _28 === void 0 ? void 0 : _28.contents[0]) === null || _29 === void 0 ? void 0 : _29.shelfRenderer) === null || _30 === void 0 ? void 0 : _30.content) === null || _31 === void 0 ? void 0 : _31.horizontalListRenderer) === null || _32 === void 0 ? void 0 : _32.items) === null || _33 === void 0 ? void 0 : _33.forEach(({ gridVideoRenderer: x }) => {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w;
            const video = {
                title: (_a = x === null || x === void 0 ? void 0 : x.title) === null || _a === void 0 ? void 0 : _a.simpleText,
                id: x === null || x === void 0 ? void 0 : x.videoId,
                url: constants_1.constants.urls.base +
                    ((_d = (_c = (_b = x === null || x === void 0 ? void 0 : x.navigationEndpoint) === null || _b === void 0 ? void 0 : _b.commandMetadata) === null || _c === void 0 ? void 0 : _c.webCommandMetadata) === null || _d === void 0 ? void 0 : _d.url),
                channel: {
                    name: channel === null || channel === void 0 ? void 0 : channel.name,
                    id: channel === null || channel === void 0 ? void 0 : channel.id,
                    url: channel === null || channel === void 0 ? void 0 : channel.url,
                },
                thumbnails: (_e = x === null || x === void 0 ? void 0 : x.thumbnail) === null || _e === void 0 ? void 0 : _e.thumbnails,
                duration: {
                    pretty: (_j = (_h = (_g = (_f = x === null || x === void 0 ? void 0 : x.thumbnailOverlays) === null || _f === void 0 ? void 0 : _f.find((x) => x === null || x === void 0 ? void 0 : x.thumbnailOverlayTimeStatusRenderer)) === null || _g === void 0 ? void 0 : _g.thumbnailOverlayTimeStatusRenderer) === null || _h === void 0 ? void 0 : _h.text) === null || _j === void 0 ? void 0 : _j.simpleText,
                    text: (_q = (_p = (_o = (_m = (_l = (_k = x === null || x === void 0 ? void 0 : x.thumbnailOverlays) === null || _k === void 0 ? void 0 : _k.find((x) => x === null || x === void 0 ? void 0 : x.thumbnailOverlayTimeStatusRenderer)) === null || _l === void 0 ? void 0 : _l.thumbnailOverlayTimeStatusRenderer) === null || _m === void 0 ? void 0 : _m.text) === null || _o === void 0 ? void 0 : _o.accessibility) === null || _p === void 0 ? void 0 : _p.accessibilityData) === null || _q === void 0 ? void 0 : _q.label,
                },
                views: {
                    pretty: (_r = x === null || x === void 0 ? void 0 : x.shortViewCountText) === null || _r === void 0 ? void 0 : _r.simpleText,
                    text: (_u = (_t = (_s = x === null || x === void 0 ? void 0 : x.shortViewCountText) === null || _s === void 0 ? void 0 : _s.accessibility) === null || _t === void 0 ? void 0 : _t.accessibilityData) === null || _u === void 0 ? void 0 : _u.label,
                    simpleText: (_v = x === null || x === void 0 ? void 0 : x.viewCountText) === null || _v === void 0 ? void 0 : _v.simpleText,
                },
                published: {
                    text: (_w = x === null || x === void 0 ? void 0 : x.publishedTimeText) === null || _w === void 0 ? void 0 : _w.simpleText,
                },
            };
            channel.videos.push(video);
        });
    }
    return channel;
});
exports.channelInfo = channelInfo;
exports.default = exports.channelInfo;
