import { VideoStream, VideoFormat } from "./videoInfo";
import { UndiciRequestOptions } from "./utils/undici";
export type GetFormatsEvaluator = "auto" | "eval" | "vm" | "isolated-vm" | GetFormatsCustomEvaluator;
export type GetFormatsCustomEvaluator = (code: string) => Promise<GetFormatsEvaluatorResult>;
interface GetFormatsEvaluatorResult {
    decoder: (a: string) => string;
    isDisposed: () => boolean;
    dispose: () => void;
}
export interface GetFormatsOptions {
    requestOptions?: UndiciRequestOptions;
    filterBy?: (value: VideoFormat) => boolean;
    evaluator?: GetFormatsEvaluator;
}
/**
 * Generates Stream URL(s).
 *
 * Always use this to get streams before getting readable streams!
 */
export declare const getFormats: (stream: VideoStream, options?: GetFormatsOptions) => Promise<VideoFormat[]>;
export {};
