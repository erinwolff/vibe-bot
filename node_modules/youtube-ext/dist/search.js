"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.search = void 0;
const undici_1 = require("undici");
const constants_1 = require("./utils/constants");
const common_1 = require("./utils/common");
/**
 * Search for videos, channels, playlists, etc...
 */
const search = (terms, options = {}) => __awaiter(void 0, void 0, void 0, function* () {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21;
    if (typeof terms !== "string") {
        throw new Error(constants_1.constants.errors.type("terms", "string", typeof terms));
    }
    if (typeof options !== "object") {
        throw new Error(constants_1.constants.errors.type("options", "object", typeof options));
    }
    options = (0, common_1.mergeObj)({
        requestOptions: {
            headers: {
                "User-Agent": constants_1.constants.headers.userAgent,
            },
        },
    }, options);
    let url = constants_1.constants.urls.search.base(terms);
    if (options.filterType &&
        constants_1.constants.urls.search.filters[options.filterType]) {
        url += constants_1.constants.urls.search.filters[options.filterType];
    }
    let data;
    try {
        const resp = yield (0, undici_1.request)(url, options.requestOptions);
        data = yield resp.body.text();
    }
    catch (err) {
        throw new Error(`Failed to fetch url "${url}". (${err})`);
    }
    let contents;
    try {
        const raw = data.substring(data.lastIndexOf('"sectionListRenderer":{"contents":[{"itemSectionRenderer":') + 58, data.lastIndexOf('},{"continuationItemRenderer"'));
        contents = (_a = JSON.parse(raw)) === null || _a === void 0 ? void 0 : _a.contents;
    }
    catch (err) {
        throw new Error(`Failed to parse contents from data. (${err})`);
    }
    const result = {
        videos: [],
        channels: [],
        playlists: [],
    };
    for (const { videoRenderer, channelRenderer, playlistRenderer, } of contents) {
        if (videoRenderer) {
            const x = videoRenderer;
            const video = {
                title: (_c = (_b = x === null || x === void 0 ? void 0 : x.title) === null || _b === void 0 ? void 0 : _b.runs[0]) === null || _c === void 0 ? void 0 : _c.text,
                id: x === null || x === void 0 ? void 0 : x.videoId,
                url: constants_1.constants.urls.base +
                    ((_f = (_e = (_d = x === null || x === void 0 ? void 0 : x.navigationEndpoint) === null || _d === void 0 ? void 0 : _d.commandMetadata) === null || _e === void 0 ? void 0 : _e.webCommandMetadata) === null || _f === void 0 ? void 0 : _f.url),
                channel: {
                    name: (_h = (_g = x === null || x === void 0 ? void 0 : x.ownerText) === null || _g === void 0 ? void 0 : _g.runs[0]) === null || _h === void 0 ? void 0 : _h.text,
                    id: (_m = (_l = (_k = (_j = x === null || x === void 0 ? void 0 : x.ownerText) === null || _j === void 0 ? void 0 : _j.runs[0]) === null || _k === void 0 ? void 0 : _k.navigationEndpoint) === null || _l === void 0 ? void 0 : _l.browseEndpoint) === null || _m === void 0 ? void 0 : _m.browseId,
                    url: constants_1.constants.urls.base +
                        ((_s = (_r = (_q = (_p = (_o = x === null || x === void 0 ? void 0 : x.ownerText) === null || _o === void 0 ? void 0 : _o.runs[0]) === null || _p === void 0 ? void 0 : _p.navigationEndpoint) === null || _q === void 0 ? void 0 : _q.commandMetadata) === null || _r === void 0 ? void 0 : _r.webCommandMetadata) === null || _s === void 0 ? void 0 : _s.url),
                },
                duration: {
                    text: (_t = x === null || x === void 0 ? void 0 : x.lengthText) === null || _t === void 0 ? void 0 : _t.simpleText,
                    pretty: (_w = (_v = (_u = x === null || x === void 0 ? void 0 : x.lengthText) === null || _u === void 0 ? void 0 : _u.accessibility) === null || _v === void 0 ? void 0 : _v.accessibilityData) === null || _w === void 0 ? void 0 : _w.label,
                },
                published: {
                    pretty: (_x = x === null || x === void 0 ? void 0 : x.publishedTimeText) === null || _x === void 0 ? void 0 : _x.simpleText,
                },
                views: {
                    text: (_y = x === null || x === void 0 ? void 0 : x.viewCountText) === null || _y === void 0 ? void 0 : _y.simpleText,
                    pretty: (_z = x === null || x === void 0 ? void 0 : x.shortViewCountText) === null || _z === void 0 ? void 0 : _z.simpleText,
                    prettyLong: (_2 = (_1 = (_0 = x === null || x === void 0 ? void 0 : x.shortViewCountText) === null || _0 === void 0 ? void 0 : _0.accessibility) === null || _1 === void 0 ? void 0 : _1.accessibilityData) === null || _2 === void 0 ? void 0 : _2.label,
                },
                thumbnails: (_3 = x === null || x === void 0 ? void 0 : x.thumbnail) === null || _3 === void 0 ? void 0 : _3.thumbnails,
            };
            result.videos.push(video);
        }
        if (channelRenderer) {
            const x = channelRenderer;
            const channel = {
                name: (_4 = x === null || x === void 0 ? void 0 : x.title) === null || _4 === void 0 ? void 0 : _4.simpleText,
                id: x === null || x === void 0 ? void 0 : x.channelId,
                url: constants_1.constants.urls.base +
                    ((_6 = (_5 = x === null || x === void 0 ? void 0 : x.navigationEndpoint) === null || _5 === void 0 ? void 0 : _5.browseEndpoint) === null || _6 === void 0 ? void 0 : _6.canonicalBaseUrl),
                // TODO: ensure if its `videoCountText` or `subscriberCountText`
                subscribers: {
                    text: (_9 = (_8 = (_7 = x === null || x === void 0 ? void 0 : x.videoCountText) === null || _7 === void 0 ? void 0 : _7.accessibility) === null || _8 === void 0 ? void 0 : _8.accessibilityData) === null || _9 === void 0 ? void 0 : _9.label,
                    pretty: (_10 = x === null || x === void 0 ? void 0 : x.videoCountText) === null || _10 === void 0 ? void 0 : _10.simpleText,
                },
                icons: (_11 = x === null || x === void 0 ? void 0 : x.thumbnail) === null || _11 === void 0 ? void 0 : _11.thumbnails,
                badges: (_13 = (((_12 = x === null || x === void 0 ? void 0 : x.ownerBadges) !== null && _12 !== void 0 ? _12 : []))) === null || _13 === void 0 ? void 0 : _13.reduce((pv, cv) => {
                    var _a;
                    const name = (_a = cv === null || cv === void 0 ? void 0 : cv.metadataBadgeRenderer) === null || _a === void 0 ? void 0 : _a.tooltip;
                    if (name)
                        pv.push(name);
                    return pv;
                }, []),
            };
            result.channels.push(channel);
        }
        if (playlistRenderer) {
            const x = playlistRenderer;
            const playlist = {
                name: (_14 = x === null || x === void 0 ? void 0 : x.title) === null || _14 === void 0 ? void 0 : _14.simpleText,
                id: x === null || x === void 0 ? void 0 : x.playlistId,
                url: constants_1.constants.urls.base +
                    ((_17 = (_16 = (_15 = x === null || x === void 0 ? void 0 : x.navigationEndpoint) === null || _15 === void 0 ? void 0 : _15.commandMetadata) === null || _16 === void 0 ? void 0 : _16.webCommandMetadata) === null || _17 === void 0 ? void 0 : _17.url),
                thumbnails: (_20 = (_19 = (_18 = x === null || x === void 0 ? void 0 : x.thumbnailRenderer) === null || _18 === void 0 ? void 0 : _18.playlistVideoThumbnailRenderer) === null || _19 === void 0 ? void 0 : _19.thumbnail) === null || _20 === void 0 ? void 0 : _20.thumbnails,
                videoCount: x === null || x === void 0 ? void 0 : x.videoCount,
                published: {
                    pretty: (_21 = x === null || x === void 0 ? void 0 : x.publishedTimeText) === null || _21 === void 0 ? void 0 : _21.simpleText,
                },
            };
            result.playlists.push(playlist);
        }
    }
    return result;
});
exports.search = search;
exports.default = exports.search;
